import runtime;
import maybe;

fib(n: int) -> [int] {
    if (n < 1) {
        [];
    } else if (n == 1) {
        [0];
    } else if (n == 2) {
        [0, 1];
    } else {
        concat(fib(n-1), [fib(n-1)[n-2] + fib(n-1)[n-3]]);
    }
}

fib_ref(n: int, fibs: ref [int]) -> void {
    if (n > length(^fibs)) {
        refArrayPush(fibs, ^fibs[length(^fibs)-1] + ^fibs[length(^fibs)-2]);
        fib_ref(n, fibs);
    }
}

main() {
    fib(0) |> println;
    fib(2) |> println;
    fib(3) |> println;
    fib(7) |> println;
    
    arr: ref [int] = ref [0, 1];
    fib_ref(0, arr);
    ^arr |> println;
    fib_ref(2, arr);
    ^arr |> println;
    fib_ref(3, arr);
    ^arr |> println;
    fib_ref(7, arr);
    ^arr |> println;

    quit(0);
}
